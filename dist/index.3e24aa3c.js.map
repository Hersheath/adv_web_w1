{"mappings":"AACA,MAAM,YAAY;IAChB;IACA;IACA;IACA;IACA;CACD;AAED,eAAe,cAAc,KAAK;IAC5B,MAAM,WAAW,MAAM,MAAM,CAAC,0BAA0B,EAAE,MAAM,cAAc,CAAC;IAC/E,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,OAAO,KAAK,OAAO;AACzB;AAEA,eAAe,kBAAkB,KAAK;IACpC,IAAI;QACA,MAAM,WAAW,MAAM,MAAM,CAAC,kDAAkD,EAAE,MAAM,CAAC;QACzF,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,KAAK,OAAO;IACvB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,CAAC,KAAK,CAAC;QACrB,OAAO;IACX;AACF;AAEA,eAAe,eAAe,KAAK;IACjC,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,SAAS,SAAS,GAAG;IACrB,MAAM,aAAa,SAAS,aAAa,CAAC;IAC1C,WAAW,SAAS,GAAG;IACvB,WAAW,WAAW,GAAG;IACzB,MAAM,cAAc,SAAS,aAAa,CAAC;IAC3C,YAAY,SAAS,GAAG;IACxB,MAAM,WAAW,SAAS,aAAa,CAAC;IACxC,SAAS,SAAS,GAAG;IACrB,MAAM,UAAU,MAAM,kBAAkB;IACxC,SAAS,WAAW,GAAG;IACvB,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,aAAa,SAAS,GAAG;IACzB,MAAM,UAAU,SAAS,aAAa,CAAC;IACvC,QAAQ,SAAS,GAAG;IAGpB,4DAA4D;IAC5D,MAAM,WAAW,MAAM,cAAc;IACrC,IAAI,UACA,QAAQ,GAAG,GAAG;SAEd,QAAQ,GAAG,GAAG;IAGlB,aAAa,WAAW,CAAC;IACzB,YAAY,WAAW,CAAC;IACxB,YAAY,WAAW,CAAC;IACxB,SAAS,WAAW,CAAC;IACrB,SAAS,WAAW,CAAC;IAErB,OAAO;AACT;AAEA,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAE9C,gEAAgE;AAChE,UAAU,OAAO,CAAC,OAAM;IACtB,MAAM,WAAW,MAAM,eAAe;IACtC,cAAc,WAAW,CAAC;AAC5B","sources":["src/index.mjs"],"sourcesContent":["\nconst dogBreeds = [\n  \"retriever\",\n  \"labrador\",\n  \"beagle\",\n  \"husky\",\n  \"samoyed\"\n];\n\nasync function fetchDogImage(breed) {\n      const response = await fetch(`https://dog.ceo/api/breed/${breed}/images/random`);\n      const data = await response.json();\n      return data.message;\n}\n\nasync function fetchBreedSummary(breed) {\n  try {\n      const response = await fetch(`https://en.wikipedia.org/api/rest_v1/page/summary/${breed}`);\n      const data = await response.json();\n      return data.extract;\n  } catch (error) {\n      console.error(`Error`);\n      return \"Error, No information available\";\n  }\n}\n\nasync function createWikiItem(breed) {\n  const wikiItem = document.createElement(\"div\");\n  wikiItem.className = \"wiki-item\";\n  const wikiHeader = document.createElement(\"h1\");\n  wikiHeader.className = \"wiki-header\";\n  wikiHeader.textContent = breed;\n  const wikiContent = document.createElement(\"div\");\n  wikiContent.className = \"wiki-content\";\n  const wikiText = document.createElement(\"p\");\n  wikiText.className = \"wiki-text\";\n  const summary = await fetchBreedSummary(breed);\n  wikiText.textContent = summary;\n  const imgContainer = document.createElement(\"div\");\n  imgContainer.className = \"img-container\";\n  const wikiImg = document.createElement(\"img\");\n  wikiImg.className = \"wiki-img\";\n\n\n  // Fetch a dog image by breed and set it as the image source\n  const imageUrl = await fetchDogImage(breed);\n  if (imageUrl) {\n      wikiImg.src = imageUrl;\n  } else {\n      wikiImg.src = \"placeholder.jpg\"; \n  }\n\n  imgContainer.appendChild(wikiImg);\n  wikiContent.appendChild(wikiText);\n  wikiContent.appendChild(imgContainer);\n  wikiItem.appendChild(wikiHeader);\n  wikiItem.appendChild(wikiContent);\n\n  return wikiItem;\n}\n\nconst wikiContainer = document.getElementById(\"wiki-container\");\n\n// Loop through dog breeds and create wiki items with dog images\ndogBreeds.forEach(async breed => {\n  const wikiItem = await createWikiItem(breed);\n  wikiContainer.appendChild(wikiItem);\n});\n"],"names":[],"version":3,"file":"index.3e24aa3c.js.map","sourceRoot":"/__parcel_source_root/"}